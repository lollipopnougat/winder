<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Winder.ViewModel"
		xmlns:model="using:Winder.Model"
		xmlns:control="clr-namespace:Winder.Controls"
		xmlns:utils="clr-namespace:Winder.Utils"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Winder.View.MainWindow"
		TransparencyLevelHint="AcrylicBlur"
		ExtendClientAreaToDecorationsHint="True"
		Background="Transparent"
		MinWidth="400"
		MinHeight="200"
		x:DataType="vm:MainViewModel"
		x:Name="mainWindow">
	<Design.DataContext>
		<vm:MainViewModel />
	</Design.DataContext>
	<Panel>
		<ExperimentalAcrylicBorder IsHitTestVisible="False">
			<ExperimentalAcrylicBorder.Material>
				<ExperimentalAcrylicMaterial BackgroundSource="Digger" TintColor="Black" TintOpacity="1" MaterialOpacity="0.55" />
			</ExperimentalAcrylicBorder.Material>
		</ExperimentalAcrylicBorder>
		<Grid Margin="5">
			<Grid.RowDefinitions>
				<RowDefinition Height="35"/>
				<RowDefinition Height="35"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="16"/>
			</Grid.RowDefinitions>
			<Panel PointerPressed="PanelPointerPressed" Grid.Row="0" Margin="0">
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
					<Image Width="24" Height="24" Margin="2,2,2,2" Source="/Assets/Img/winder-logo.png" />
					<TextBlock Text="{Binding TitleText}" FontSize="20" Margin="2,2,2,2"/>
				</StackPanel>
			</Panel>
			<Grid Grid.Row="1" Margin="0,0,0,5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="40"/>
					<ColumnDefinition Width="40"/>
					<ColumnDefinition Width="40"/>
					<ColumnDefinition Width="*" MinWidth="100"/>
					<ColumnDefinition Width="40"/>
				</Grid.ColumnDefinitions>
				<Grid.Styles>
					<Style Selector="Button:disabled /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="Transparent"/>
					</Style>
				</Grid.Styles>
				<Button Classes="btn" Grid.Column="0" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" IsEnabled="{Binding CanGoBack}" Command="{Binding BackBtnClickCommand}">&#xf060;</Button>
				<Button Classes="btn" Grid.Column="1" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" IsEnabled="{Binding CanGoForward}" Command="{Binding ForwardBtnClickCommand}">&#xf061;</Button>
				<Button Classes="btn" Grid.Column="2" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" IsEnabled="{Binding UpBtnEnabled}" Command="{Binding UpBtnClickCommand}" >&#xf062;</Button>
				<AutoCompleteBox Grid.Column="3" Margin="0" x:Name="autoCompleteBox" Text="{Binding PathBoxText}" Height="32" FilterMode="StartsWith" AsyncPopulator="{Binding MyAutoCompletePath}">
					<AutoCompleteBox.KeyBindings>
						<KeyBinding Command="{Binding SetAddressPathFromUICommand}" Gesture="Enter" />
					</AutoCompleteBox.KeyBindings>
					<Interaction.Behaviors>
						<EventTriggerBehavior EventName="SelectionChanged">
							<InvokeCommandAction Command="{Binding SetAddressPathFromUICommand}" />
						</EventTriggerBehavior>
					</Interaction.Behaviors>
				</AutoCompleteBox>
				<Panel Margin="0,0,5,0" Grid.Column="3" IsVisible="{Binding Text,ElementName=autoCompleteBox,Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
					<Button HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,2,0,0" FontSize="18" Padding="5,2,5,2" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" Command="{Binding ClearAddressBoxCommand}">&#xf00d;</Button>
				</Panel>
				<Button Grid.Column="4" Margin="5,0,0,0" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" Command="{Binding SetAddressPathFromUICommand}">&#xf2f9;</Button>
			</Grid>
			<Grid Grid.Row="2">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" MinWidth="50"/>
					<ColumnDefinition Width="2"/>
					<ColumnDefinition Width="4*" MinWidth="100"/>
				</Grid.ColumnDefinitions>
				<TreeView Grid.Column="0" ItemsSource="{Binding Nodes}" SelectionMode="Single" SelectedItem="{Binding SelectedNode}" >
					<TreeView.Styles>
						<Style Selector="TreeViewItem">
							<Setter Property="utils:TreeViewItemBehavior.ExpandedCommand" Value="{Binding #mainWindow.((vm:MainViewModel)DataContext).ExpandNodeCommand}" />
							<Setter Property="utils:TreeViewItemBehavior.ItemClickCommand" Value="{Binding #mainWindow.((vm:MainViewModel)DataContext).ClickTreeViewCommand}" />
						</Style>
					</TreeView.Styles>
					<TreeView.ItemTemplate>
						<TreeDataTemplate ItemsSource="{Binding ChildNodes}">
							<TextBlock Text="{Binding Title}"/>
						</TreeDataTemplate>
					</TreeView.ItemTemplate>
				</TreeView>
				<GridSplitter Grid.Column="1" ResizeDirection="Columns"/>
				<DataGrid Grid.Column="2" Margin="0" ItemsSource="{Binding FileItems}" SelectionMode="Single" CanUserSortColumns="True" CanUserResizeColumns="True" x:Name="dataGrid">
					<DataGrid.Resources>
						<ContextMenu x:Key="gridRowMenu">
							<MenuItem Header="打开" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).DoubleClickCommand}" CommandParameter="{Binding #dataGrid.SelectedItem}"
									  >
								<MenuItem.Icon>
									<TextBlock Text="&#xf135;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold"/>
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="复制" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).CopyFileClickCommand}"
									  CommandParameter="{Binding #dataGrid.SelectedItem}" >
								<MenuItem.Icon>
									<TextBlock Text="&#xf0c5;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold"/>
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="剪切" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).CutFileClickCommand}"
									  CommandParameter="{Binding #dataGrid.SelectedItem}" >
								<MenuItem.Icon>
									<TextBlock Text="&#xf0c4;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" />
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="粘贴" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).PasteFileClick}"
									   IsVisible="{Binding #mainWindow.((vm:MainViewModel)DataContext).CanPaste}" >
								<MenuItem.Icon>
									<TextBlock Text="&#xf0ea;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="重命名" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).RenameFileClickCommand}" CommandParameter="{Binding #dataGrid.SelectedItem}" >
								<MenuItem.Icon>
									<TextBlock Text="&#xf246;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="删除" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).RemoveFileClickCommand}" CommandParameter="{Binding #dataGrid.SelectedItem}" >
								<MenuItem.Icon>
									<TextBlock Text="&#xf1f8;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" />
								</MenuItem.Icon>
							</MenuItem>
						</ContextMenu>
						<ContextMenu x:Key="gridMenu">
							<MenuItem Header="刷新" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).RefreshListCommand}" CommandParameter="{Binding #dataGrid.SelectedItem}"
									  >
								<MenuItem.Icon>
									<TextBlock Text="&#xf021;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="粘贴" Command="{Binding #mainWindow.((vm:MainViewModel)DataContext).PasteFileClick}"
									   IsVisible="{Binding #mainWindow.((vm:MainViewModel)DataContext).CanPaste}" >
								<MenuItem.Icon>
									<TextBlock Text="&#xf0ea;" TextAlignment="Center" FontSize="24" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" />
								</MenuItem.Icon>
							</MenuItem>
						</ContextMenu>
					</DataGrid.Resources>
					<DataGrid.Styles>
						<Style Selector="DataGridCell TextBlock">
							<Setter Property="TextTrimming" Value="CharacterEllipsis" />
						</Style>
						<!-- 禁用列标题的上下文菜单 -->
						<Style Selector="DataGridColumnHeader">
							<Setter Property="ContextMenu" Value="{x:Null}"/>
						</Style>
						<Style Selector="DataGrid:focus DataGridCell:current /template/ Grid#FocusVisual">
							<Setter Property="IsVisible" Value="False" />
						</Style>
						<Style Selector="DataGrid DataGridCell:current /template/ Grid#FocusVisual">
							<Setter Property="IsVisible" Value="False" />
						</Style>
						<Style Selector="DataGrid:focus DataGridCell:selected:focus:current /template/ Grid#FocusVisual">
							<Setter Property="IsVisible" Value="False" />
						</Style>
						<Style Selector="DataGridRow">
							<Setter Property="ContextMenu" Value="{StaticResource ResourceKey=gridRowMenu}" />
						</Style>
						<Style Selector="DataGridRowsPresenter">
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="ContextMenu" Value="{StaticResource ResourceKey=gridMenu}" />
						</Style>
						<Style Selector="DataGridRow">
							<Setter Property="utils:DataGridRowDTBehavior.DoubleTappedCommand" Value="{Binding #mainWindow.((vm:MainViewModel)DataContext).DoubleClickCommand}" />
						</Style>
					</DataGrid.Styles>
					<DataGrid.RowTheme>
					</DataGrid.RowTheme>
					<DataGrid.Columns>
						<DataGridTemplateColumn Width="30" MaxWidth="30" MinWidth="30">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="30"/>
										</Grid.ColumnDefinitions>
										<control:FileIcon Grid.Column="0" Width="40" Margin="2,0,0,0" FileType="{Binding FileType}" VerticalAlignment="Center" FontSize="16" />
									</Grid>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTemplateColumn Header="名称" Width="300">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<TextBlock Grid.Row="0" VerticalAlignment="Center" Text="{Binding Name}" Margin="5,0,0,0" IsVisible="{Binding !Editing}"/>
										<Grid Classes="line" Grid.Row="0" Margin="0" IsVisible="{Binding Editing}">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="35" />
												<ColumnDefinition Width="35" />
											</Grid.ColumnDefinitions>
											<FlyoutBase.AttachedFlyout>
												<Flyout><TextBlock Text="{Binding ErrorText}" /></Flyout>
											</FlyoutBase.AttachedFlyout>
											<TextBox Grid.Column="0" Text="{Binding EditText}"/>
											<Button Grid.Column="1" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" Command="{Binding CancelNameCommand}" Margin="2,0,0,0" Width="32">&#xf00d;</Button>
											<Button Grid.Column="2" Background="Transparent" FontFamily="{StaticResource FontAwesome}" FontWeight="Bold" Command="{Binding SubmitNameCommand}" CommandParameter="{Binding $parent}" Margin="2,0,0,0" Width="32">
												&#xf00c;
											</Button>
										</Grid>
									</Grid>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTextColumn Header="修改日期" Width="150" Binding="{Binding LastWriteTime}" IsReadOnly="True" />
						<DataGridTextColumn Header="类型" Width="100" Binding="{Binding FileTypeStr}" IsReadOnly="True" />
						<DataGridTextColumn Header="大小" Width="100" Binding="{Binding Length}" IsReadOnly="True" />
					</DataGrid.Columns>
				</DataGrid>
				<Grid Grid.Column="2" Margin="0" Background="Transparent" IsVisible="{Binding IsError}">
					<ExperimentalAcrylicBorder IsHitTestVisible="False">
						<ExperimentalAcrylicBorder.Material>
							<ExperimentalAcrylicMaterial BackgroundSource="Digger" TintColor="Black" TintOpacity="1" MaterialOpacity="0.55" />
						</ExperimentalAcrylicBorder.Material>
					</ExperimentalAcrylicBorder>
					<Panel Margin="0">
						<TextBlock FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ErrorMsg}" />
					</Panel>
				</Grid>
			</Grid>
			<Grid Grid.Row="3" Margin="5,0,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" MinWidth="50"/>
				</Grid.ColumnDefinitions>
				<TextBlock Text="{Binding StatusText}" />
			</Grid>
		</Grid>
	</Panel>
</Window>
